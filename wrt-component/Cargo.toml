[package]
name = "wrt-component"
version.workspace = true
edition.workspace = true
description = "WebAssembly Component Model support for WRT"
license.workspace = true
repository.workspace = true
documentation = "https://docs.rs/wrt-component"
keywords = ["wasm", "webassembly", "runtime", "component-model"]
categories = ["wasm", "no-std"]

[lints]
workspace = true

[dependencies]
wrt-error = { workspace = true, default-features = false }
wrt-format = { workspace = true, default-features = false }
wrt-host = { workspace = true, default-features = false }
wrt-foundation = { workspace = true, default-features = false }
wrt-intercept = { workspace = true, default-features = false }
wrt-decoder = { workspace = true, default-features = false, optional = true }
wrt-platform = { workspace = true, default-features = false }
wrt-runtime = { workspace = true, default-features = false }
wrt-sync = { workspace = true, default-features = false }

# No-std support (removed invalid alloc dependency)

# Optional dependencies
log = { version = "0.4", optional = true }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }

[features]
# By default, enable std to match wrt-runtime's default behavior
# This ensures consistent feature resolution across workspace and isolated builds
default = ["std"]

# Standard library support
std = [
    "wrt-format/std",
    "wrt-host/std",
    "wrt-intercept/std",
    "wrt-decoder/std",
    "wrt-platform/std",
    "wrt-runtime/std",
    "wrt-sync/std",
    "wrt-error/std",
    "wrt-foundation/std",
    "wrt-foundation/wrt-allocator",
    "dep:log"]

# Allocation support for no_std environments (DEPRECATED - use bounded-allocation instead)
alloc = [
    "bounded-allocation",
    "wrt-format/alloc",
    "wrt-decoder/alloc",
    "wrt-runtime/alloc",
    "wrt-host/alloc",
    "wrt-intercept/alloc"]

# ============================================================================
# Four-Layer Safety Architecture Feature Propagation
# ============================================================================

# Layer 1: Memory Management Strategy (mutually exclusive)
static-allocation = ["wrt-foundation/static-allocation"]
bounded-allocation = ["wrt-foundation/bounded-allocation"]
managed-allocation = ["wrt-foundation/managed-allocation"]
std-allocation = ["wrt-foundation/std-allocation"]

# Layer 3: Safety Standards (mutually exclusive within project)
iso-26262 = ["wrt-foundation/iso-26262"]
do-178c = ["wrt-foundation/do-178c"]
iec-61508 = ["wrt-foundation/iec-61508"]
iec-62304 = ["wrt-foundation/iec-62304"]
en-50128 = ["wrt-foundation/en-50128"]
iso-25119 = ["wrt-foundation/iso-25119"]

# Layer 4: Safety Integrity Levels (dependent on standard)
# ISO 26262 - Automotive
qm = ["wrt-foundation/qm", "wrt-format/qm", "wrt-host/qm", "wrt-decoder/qm", "wrt-platform/qm", "wrt-runtime/qm", "wrt-intercept/qm"]
asil-a = ["wrt-foundation/asil-a", "wrt-format/asil-a", "wrt-host/asil-a", "wrt-decoder/asil-a", "wrt-platform/asil-a", "wrt-runtime/asil-a", "wrt-intercept/asil-a"]
asil-b = ["wrt-foundation/asil-b", "wrt-format/asil-b", "wrt-host/asil-b", "wrt-decoder/asil-b", "wrt-platform/asil-b", "wrt-runtime/asil-b", "wrt-intercept/asil-b"]
asil-c = ["wrt-foundation/asil-c", "wrt-format/asil-c", "wrt-host/asil-c", "wrt-decoder/asil-c", "wrt-platform/asil-c", "wrt-runtime/asil-c", "wrt-intercept/asil-c"]
asil-d = ["wrt-foundation/asil-d", "wrt-format/asil-d", "wrt-host/asil-d", "wrt-decoder/asil-d", "wrt-platform/asil-d", "wrt-runtime/asil-d", "wrt-intercept/asil-d"]

# DO-178C - Aerospace
dal-e = ["wrt-foundation/dal-e"]
dal-d = ["wrt-foundation/dal-d"]
dal-c = ["wrt-foundation/dal-c"]
dal-b = ["wrt-foundation/dal-b"]
dal-a = ["wrt-foundation/dal-a"]

# IEC 61508 - Industrial
sil-1 = ["wrt-foundation/sil-1"]
sil-2 = ["wrt-foundation/sil-2"]
sil-3 = ["wrt-foundation/sil-3"]
sil-4 = ["wrt-foundation/sil-4"]

# IEC 62304 - Medical
class-a = ["wrt-foundation/class-a"]
class-b = ["wrt-foundation/class-b"]
class-c = ["wrt-foundation/class-c"]

# EN 50128 - Railway
railway-sil-0 = ["wrt-foundation/railway-sil-0"]
railway-sil-1 = ["wrt-foundation/railway-sil-1"]
railway-sil-2 = ["wrt-foundation/railway-sil-2"]
railway-sil-3 = ["wrt-foundation/railway-sil-3"]
railway-sil-4 = ["wrt-foundation/railway-sil-4"]

# ISO 25119 - Agricultural
agpl-a = ["wrt-foundation/agpl-a"]
agpl-b = ["wrt-foundation/agpl-b"]
agpl-c = ["wrt-foundation/agpl-c"]
agpl-d = ["wrt-foundation/agpl-d"]
agpl-e = ["wrt-foundation/agpl-e"]

# Legacy compatibility features (DEPRECATED - use four-layer architecture above)
safe-memory = ["iso-26262", "asil-b"]
safety-asil-b = ["iso-26262", "asil-b"]
safety-asil-c = ["iso-26262", "asil-c"]
safety-asil-d = ["iso-26262", "asil-d"]

# For compatibility with verification script
no_std = []

# Verification with Kani
kani = ["wrt-host/kani", "wrt-intercept/kani", "wrt-foundation/kani"]

# Performance features
optimize = [
    "wrt-format/optimize",
    "wrt-host/optimize",
    "wrt-foundation/optimize",
    "wrt-intercept/optimize",
    "wrt-decoder/optimize",
    "wrt-runtime/optimize"
]

# Debug logging
debug-log = []

# Component Model features
component-model-core = ["wrt-format/component-model-core"]
component-model-values = ["wrt-format/component-model-values"]
component-model-resources = ["wrt-format/component-model-resources"]
component-model-async = ["wrt-foundation/component-model-async"]
component-model-error-context = ["wrt-foundation/component-model-error-context"]
component-model-threading = ["wrt-foundation/component-model-threading"]
component-model-all = [
    "component-model-core",
    "component-model-values",
    "component-model-resources",
    "component-model-async",
    "component-model-error-context",
    "component-model-threading"
]

# Decoder support
decoder = ["dep:wrt-decoder"]


[[example]]
name = "component_info_simple"
path = "examples/component_info_simple.rs"
required-features = ["std"]

[[example]]
name = "interceptor_example"
path = "examples/interceptor_example.rs"
required-features = ["std"]

[[bench]]
name = "wrt_allocator_benchmarks"
harness = false
required-features = ["std", "safety-asil-c"]

[[bench]]
name = "zero_cost_validation"
harness = false
required-features = ["std", "safety-asil-c"]


 